context_version: 1
module: sdk_typescript
language: typescript
goals:
  - Smart client with ring/epoch watch, leader routing, retries, idempotency.
  - Hash parity with server (xxhash64 + jump).
api:
  - "put(key: Uint8Array|string, value: Uint8Array|string, opts?: {ttlMs?, ifNotExists?, ifMatchVersion?, idempotencyKey?})"
  - "get(key, opts?: {consistency?: 'lease'|'linearizable'|'stale_ok'})"
  - "delete(key, opts?: {ifMatchVersion?, idempotencyKey?})"
  - "compareAndSet(key, expectedVersion, newValue)"
routing:
  hash: "xxhash64(seed=0)"
  consistent_hash: "jump_consistent_hash"
retries:
  strategy: "exponential backoff 10â€“100ms jitter; idempotent ops only"
tests:
  - "hash test vectors parity with server"
  - "routing under leader change"
